{
  "address": "0x0eB864C11a857C023637E5f37D0E5736974C2E61",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        }
      ],
      "name": "applyAddToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denormalizedWeight",
          "type": "uint256"
        }
      ],
      "name": "commitAddToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "weights",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "finalize",
          "type": "bool"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "contract BPool",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract CRPFactory",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "contract BFactory",
          "name": "bFactory",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "poolTokenSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "poolTokenName",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "constituentTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenBalances",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenWeights",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "swapFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct ConfigurableRightsPool.PoolParams",
          "name": "poolParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumWeightChangeBlockPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addTokenTimeLockInBlocks",
              "type": "uint256"
            }
          ],
          "internalType": "struct ConfigurableRightsPool.CrpParams",
          "name": "crpParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "canPauseSwapping",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canChangeSwapFee",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canChangeWeights",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canAddRemoveTokens",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canWhitelistLPs",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canChangeCap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canChangeProtocolFee",
              "type": "bool"
            }
          ],
          "internalType": "struct RightsManager.Rights",
          "name": "rights",
          "type": "tuple"
        }
      ],
      "name": "createSmartPool",
      "outputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        }
      ],
      "name": "decreaseWeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BPool",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        }
      ],
      "name": "increaseWeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "maxAmountsIn",
          "type": "uint256[]"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "maxAmountsIn",
          "type": "uint256[]"
        }
      ],
      "name": "joinSmartPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPoolAmountOut",
          "type": "uint256"
        }
      ],
      "name": "joinswapExternAmountIn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "providers",
          "type": "address[]"
        }
      ],
      "name": "removeWhitelistedLiquidityProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "setAccessControlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_canChangeSwapFee",
          "type": "bool"
        }
      ],
      "name": "setCanWhitelistLPs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "setCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newController",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "publicSwap",
          "type": "bool"
        }
      ],
      "name": "setPublicSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "roles",
          "type": "bytes32[]"
        }
      ],
      "name": "setRoles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract BPool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "denorms",
          "type": "uint256[]"
        }
      ],
      "name": "setTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "newWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        }
      ],
      "name": "updateWeightsGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ConfigurableRightsPool",
          "name": "crp",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "providers",
          "type": "address[]"
        }
      ],
      "name": "whitelistLiquidityProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd8b188916cb90b016bcfe3b21e7dafe0ac7fec2b89a05aaeb0110af3d09662de",
  "receipt": {
    "to": null,
    "from": "0xf29162ed5Ed4Da23656C5190aae71e61Bb074AeC",
    "contractAddress": "0x0eB864C11a857C023637E5f37D0E5736974C2E61",
    "transactionIndex": 2,
    "gasUsed": "2849817",
    "logsBloom": "0x
    "blockHash": "0x2ac87ec28b72f7b9de3ff934d28ca7f64bcfd1593cedaa7a6482285375a8b135",
    "transactionHash": "0xd8b188916cb90b016bcfe3b21e7dafe0ac7fec2b89a05aaeb0110af3d09662de",
    "logs": [],
    "blockNumber": 11632937,
    "cumulativeGasUsed": "3178162",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "fb10f35eb4feb29b466fe450577ebc98",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"name\":\"applyAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denormalizedWeight\",\"type\":\"uint256\"}],\"name\":\"commitAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finalize\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CRPFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"contract BFactory\",\"name\":\"bFactory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"poolTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"poolTokenName\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"constituentTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenBalances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ConfigurableRightsPool.PoolParams\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumWeightChangeBlockPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addTokenTimeLockInBlocks\",\"type\":\"uint256\"}],\"internalType\":\"struct ConfigurableRightsPool.CrpParams\",\"name\":\"crpParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"canPauseSwapping\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeWeights\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canAddRemoveTokens\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canWhitelistLPs\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeCap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeProtocolFee\",\"type\":\"bool\"}],\"internalType\":\"struct RightsManager.Rights\",\"name\":\"rights\",\"type\":\"tuple\"}],\"name\":\"createSmartPool\",\"outputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"name\":\"decreaseWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"name\":\"increaseWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinSmartPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolAmountOut\",\"type\":\"uint256\"}],\"name\":\"joinswapExternAmountIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"providers\",\"type\":\"address[]\"}],\"name\":\"removeWhitelistedLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAccessControlAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_canChangeSwapFee\",\"type\":\"bool\"}],\"name\":\"setCanWhitelistLPs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"setCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"publicSwap\",\"type\":\"bool\"}],\"name\":\"setPublicSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"setRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"denorms\",\"type\":\"uint256[]\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"newWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"providers\",\"type\":\"address[]\"}],\"name\":\"whitelistLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"BActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":false,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjeulxarulrulxarrcLgvifCTUcarrLsTOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n        bool canChangeProtocolFee;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint256 amount) external virtual returns (bool);\\n\\n    function transfer(address dst, uint256 amt) external virtual returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external virtual returns (bool);\\n\\n    function balanceOf(address whom) external view virtual returns (uint256);\\n\\n    function allowance(address, address) external view virtual returns (uint256);\\n}\\n\\nabstract contract BalancerOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BalancerOwnable {\\n    function setSwapFee(uint256 swapFee) external virtual;\\n\\n    function setProtocolFee(uint256 protocolFee) external virtual;\\n\\n    function setRoles(bytes32[] memory roles) external virtual;\\n\\n    function setAccessControlAddress(address accessAddress) external virtual;\\n\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint256 poolAmountOut, uint256[] calldata maxAmountsIn) external virtual;\\n\\n    function joinswapExternAmountIn(\\n        address tokenIn,\\n        uint256 tokenAmountIn,\\n        uint256 minPoolAmountOut\\n    ) external virtual returns (uint256 poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n\\n    function bind(\\n        address token,\\n        uint256 balance,\\n        uint256 denorm\\n    ) external virtual;\\n\\n    function rebind(\\n        address token,\\n        uint256 balance,\\n        uint256 denorm\\n    ) external virtual;\\n\\n    function unbind(address token) external virtual;\\n\\n    function isBound(address t) external view virtual returns (bool);\\n\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n\\n    function getFinalTokens() external view virtual returns (address[] memory);\\n\\n    function getBalance(address token) external view virtual returns (uint256);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint256[] tokenBalances;\\n        uint256[] tokenWeights;\\n        uint256 swapFee;\\n        uint256 protocolFee;\\n    }\\n\\n    struct CrpParams {\\n        uint256 initialSupply;\\n        uint256 minimumWeightChangeBlockPeriod;\\n        uint256 addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint256 initialSupply,\\n        uint256 minimumWeightChangeBlockPeriod,\\n        uint256 addTokenTimeLockInBlocks\\n    ) external virtual;\\n\\n    function createPool(uint256 initialSupply) external virtual;\\n\\n    function setCap(uint256 newCap) external virtual;\\n\\n    function updateWeight(address token, uint256 newWeight) external virtual;\\n\\n    function updateWeightsGradually(\\n        uint256[] calldata newWeights,\\n        uint256 startBlock,\\n        uint256 endBlock\\n    ) external virtual;\\n\\n    function commitAddToken(\\n        address token,\\n        uint256 balance,\\n        uint256 denormalizedWeight\\n    ) external virtual;\\n\\n    function applyAddToken() external virtual;\\n\\n    function removeToken(address token) external virtual;\\n\\n    function whitelistLiquidityProvider(address[] calldata providers) external virtual;\\n\\n    function removeWhitelistedLiquidityProvider(address[] calldata providers) external virtual;\\n\\n    function bPool() external view virtual returns (BPool);\\n\\n    function setCanWhitelistLPs(bool) external virtual;\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint256[] calldata balances,\\n        uint256[] calldata weights,\\n        uint256 swapFee,\\n        uint256 protocolFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n        pool.setProtocolFee(protocolFee);\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory bFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(poolParams.constituentTokens.length == poolParams.tokenBalances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(poolParams.constituentTokens.length == poolParams.tokenWeights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        crp = factory.newCrp(address(bFactory), poolParams, rights);\\n\\n        for (uint256 i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint256 poolAmountOut,\\n        uint256[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint256 poolAmountOut,\\n        uint256[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint256 tokenAmountIn,\\n        uint256 minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint256 poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint256 newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    function setProtocolFee(AbstractPool pool, uint256 newFee) external {\\n        pool.setProtocolFee(newFee);\\n    }\\n\\n    function setRoles(AbstractPool pool, bytes32[] memory roles) external {\\n        pool.setRoles(roles);\\n    }\\n\\n    function setAccessControlAddress(AbstractPool pool, address newAddress) external {\\n        pool.setAccessControlAddress(newAddress);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint256[] calldata balances,\\n        uint256[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint256 newWeight,\\n        uint256 tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint256 newWeight,\\n        uint256 poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint256[] calldata newWeights,\\n        uint256 startBlock,\\n        uint256 endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(ConfigurableRightsPool crp, uint256 newCap) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint256 balance,\\n        uint256 denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint256 tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint256 poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(ConfigurableRightsPool crp, address[] calldata providers) external {\\n        crp.whitelistLiquidityProvider(providers);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(ConfigurableRightsPool crp, address[] calldata providers) external {\\n        crp.removeWhitelistedLiquidityProvider(providers);\\n    }\\n\\n    function setCanWhitelistLPs(ConfigurableRightsPool crp, bool _canChangeSwapFee) external {\\n        crp.setCanWhitelistLPs(_canChangeSwapFee);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(\\n        ERC20 token,\\n        address spender,\\n        uint256 amount\\n    ) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint256 poolAmountOut,\\n        uint256[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x3c6e68e334a892524b64fcc5b19dd11f782681307e944f3176877f7c70c25d29\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613297806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638a5c57df116100c3578063c037f39c1161007c578063c037f39c14610297578063c1762b15146102aa578063da5a7feb146102bd578063e0d945bf146102d0578063e71414b6146102e3578063ec401b1d1461030c5761014d565b80638a5c57df14610225578063991991c7146102385780639c11bd171461024b5780639fbbf3ba1461025e578063b5b3ca2c14610271578063bfb973ad146102845761014d565b8063531f8bb611610115578063531f8bb6146101b3578063674f8d8e146101c65780637b7d6c68146101d957806380ad2cf3146101ec57806381bd5cd7146101ff57806384f3859b146102125761014d565b8063145aa57e146101525780631eccc185146101675780632c91a5911461017a578063370fc1571461018d5780634ef39b75146101a0575b600080fd5b6101656101603660046127ea565b61031f565b005b6101656101753660046128c6565b610381565b610165610188366004612af5565b6103ad565b61016561019b3660046128c6565b6104dc565b6101656101ae36600461270e565b610508565b6101656101c1366004612822565b610678565b6101656101d43660046128f3565b6106a4565b6101656101e73660046127ea565b6108b9565b6101656101fa366004612938565b6108e5565b61016561020d3660046128f3565b610911565b610165610220366004612c92565b610a50565b610165610233366004612af5565b610c62565b610165610246366004612938565b610c9d565b610165610259366004612c2e565b610cc9565b61016561026c3660046128f3565b610d34565b61016561027f366004612938565b610d9c565b610165610292366004612bdc565b610dc8565b6101656102a5366004612c92565b610e2d565b6101656102b83660046128f3565b610f5f565b6101656102cb366004612bdc565b61112c565b6101656102de366004612a4d565b61115a565b6102f66102f1366004612b4e565b611984565b6040516103039190612e2e565b60405180910390f35b6102f661031a366004612963565b611cba565b60405163e8d56b8b60e01b81526001600160a01b0383169063e8d56b8b9061034b908490600401612e2e565b600060405180830381600087803b15801561036557600080fd5b505af1158015610379573d6000803e3d6000fd5b505050505050565b6040516324dacaa960e11b81526001600160a01b038316906349b595529061034b90849060040161304a565b6060846001600160a01b031663b64ef17b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190612a31565b6001600160a01b031663cc77828d6040518163ffffffff1660e01b815260040160006040518083038186803b15801561045857600080fd5b505afa15801561046c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104949190810190612731565b90506104d58582868686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506121ae92505050565b5050505050565b60405163c2a14eb560e01b81526001600160a01b0383169063c2a14eb59061034b90849060040161304a565b806001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038416925063a9059cbb9150339083906370a0823190610591903090600401612e2e565b60206040518083038186803b1580156105a957600080fd5b505afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190612cd2565b6040518363ffffffff1660e01b81526004016105fe929190612e66565b602060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906127ce565b6106755760405162461bcd60e51b815260040161066c90613082565b60405180910390fd5b50565b60405163348d48e160e11b81526001600160a01b0383169063691a91c29061034b908490600401612fdf565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906106d490339030908690600401612e42565b602060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906127ce565b6107425760405162461bcd60e51b815260040161066c90613082565b604051639776e94b60e01b81526001600160a01b03851690639776e94b906107709086908690600401612e66565b600060405180830381600087803b15801561078a57600080fd5b505af115801561079e573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038616925063a9059cbb9150339083906370a08231906107d8903090600401612e2e565b60206040518083038186803b1580156107f057600080fd5b505afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108289190612cd2565b6040518363ffffffff1660e01b8152600401610845929190612e66565b602060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089791906127ce565b6108b35760405162461bcd60e51b815260040161066c90613082565b50505050565b6040516392eefe9b60e01b81526001600160a01b038316906392eefe9b9061034b908490600401612e2e565b6040516347786d3760e01b81526001600160a01b038316906347786d379061034b9084906004016130af565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061094190339030908690600401612e42565b602060405180830381600087803b15801561095b57600080fd5b505af115801561096f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099391906127ce565b6109af5760405162461bcd60e51b815260040161066c90613082565b6109ba838583612525565b604051639776e94b60e01b81526001600160a01b03851690639776e94b906109e89086908690600401612e66565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038716925063a9059cbb9150339083906370a08231906107d8903090600401612e2e565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610a8090339030908690600401612e42565b602060405180830381600087803b158015610a9a57600080fd5b505af1158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad291906127ce565b610aee5760405162461bcd60e51b815260040161066c90613082565b6040516317e9ed6160e21b81526001600160a01b03841690635fa7b58490610b1a908590600401612e2e565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038516925063a9059cbb9150339083906370a0823190610b82903090600401612e2e565b60206040518083038186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190612cd2565b6040518363ffffffff1660e01b8152600401610bef929190612e66565b602060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4191906127ce565b610c5d5760405162461bcd60e51b815260040161066c90613082565b505050565b6060846001600160a01b031663be3bbd2e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561045857600080fd5b6040516334e1990760e01b81526001600160a01b038316906334e199079061034b9084906004016130af565b60405163246bc19b60e01b81526001600160a01b0386169063246bc19b90610cfb908790879087908790600401613023565b600060405180830381600087803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050505050505050565b604051634c20d20960e01b81526001600160a01b03851690634c20d20990610d6490869086908690600401612faa565b600060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b5050505050505050565b60405163787dce3d60e01b81526001600160a01b0383169063787dce3d9061034b9084906004016130af565b604051636647666160e01b81526001600160a01b03841690636647666190610df69085908590600401612fcb565b600060405180830381600087803b158015610e1057600080fd5b505af1158015610e24573d6000803e3d6000fd5b50505050505050565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd90610e5d90339030908690600401612e42565b602060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaf91906127ce565b610ecb5760405162461bcd60e51b815260040161066c90613082565b610ed6828483612525565b826001600160a01b031663c275d81b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f1157600080fd5b505af1158015610f25573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038616925063a9059cbb9150339083906370a0823190610b82903090600401612e2e565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610f8f90339030908790600401612e42565b602060405180830381600087803b158015610fa957600080fd5b505af1158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe191906127ce565b610ffd5760405162461bcd60e51b815260040161066c90613082565b611008838584612525565b604051635db3427760e01b81526000906001600160a01b03861690635db342779061103b90879087908790600401612faa565b602060405180830381600087803b15801561105557600080fd5b505af1158015611069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108d9190612cd2565b60405163a9059cbb60e01b81529091506001600160a01b0386169063a9059cbb906110be9033908590600401612e66565b602060405180830381600087803b1580156110d857600080fd5b505af11580156110ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111091906127ce565b6104d55760405162461bcd60e51b815260040161066c90613082565b604051638cc3780160e01b81526001600160a01b03841690638cc3780190610df69085908590600401612fcb565b8483146111795760405162461bcd60e51b815260040161066c90613055565b8481146111985760405162461bcd60e51b815260040161066c90613055565b60005b85811015610d925760008787838181106111b157fe5b90506020020160208101906111c6919061270e565b9050886001600160a01b0316632f37b6248989858181106111e357fe5b90506020020160208101906111f8919061270e565b6040518263ffffffff1660e01b81526004016112149190612e2e565b60206040518083038186803b15801561122c57600080fd5b505afa158015611240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126491906127ce565b1561167157886001600160a01b031663f8b2cb4f89898581811061128457fe5b9050602002016020810190611299919061270e565b6040518263ffffffff1660e01b81526004016112b59190612e2e565b60206040518083038186803b1580156112cd57600080fd5b505afa1580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190612cd2565b86868481811061131157fe5b90506020020135111561152557806001600160a01b03166323b872dd33308c6001600160a01b031663f8b2cb4f8d8d8981811061134a57fe5b905060200201602081019061135f919061270e565b6040518263ffffffff1660e01b815260040161137b9190612e2e565b60206040518083038186803b15801561139357600080fd5b505afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb9190612cd2565b8a8a888181106113d757fe5b90506020020135036040518463ffffffff1660e01b81526004016113fd93929190612e42565b602060405180830381600087803b15801561141757600080fd5b505af115801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f91906127ce565b61146b5760405162461bcd60e51b815260040161066c90613082565b611525818a8b6001600160a01b031663f8b2cb4f8c8c8881811061148b57fe5b90506020020160208101906114a0919061270e565b6040518263ffffffff1660e01b81526004016114bc9190612e2e565b60206040518083038186803b1580156114d457600080fd5b505afa1580156114e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150c9190612cd2565b89898781811061151857fe5b9050602002013503612525565b620f424086868481811061153557fe5b9050602002013511156115ed57886001600160a01b0316633fdddaa289898581811061155d57fe5b9050602002016020810190611572919061270e565b88888681811061157e57fe5b9050602002013587878781811061159157fe5b905060200201356040518463ffffffff1660e01b81526004016115b693929190612faa565b600060405180830381600087803b1580156115d057600080fd5b505af11580156115e4573d6000803e3d6000fd5b5050505061166c565b886001600160a01b031663cf5e7bd389898581811061160857fe5b905060200201602081019061161d919061270e565b6040518263ffffffff1660e01b81526004016116399190612e2e565b600060405180830381600087803b15801561165357600080fd5b505af1158015611667573d6000803e3d6000fd5b505050505b6117e5565b806001600160a01b03166323b872dd333089898781811061168e57fe5b905060200201356040518463ffffffff1660e01b81526004016116b393929190612e42565b602060405180830381600087803b1580156116cd57600080fd5b505af11580156116e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170591906127ce565b6117215760405162461bcd60e51b815260040161066c90613082565b61173e818a88888681811061173257fe5b90506020020135612525565b886001600160a01b031663e4e1e53889898581811061175957fe5b905060200201602081019061176e919061270e565b88888681811061177a57fe5b9050602002013587878781811061178d57fe5b905060200201356040518463ffffffff1660e01b81526004016117b293929190612faa565b600060405180830381600087803b1580156117cc57600080fd5b505af11580156117e0573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611814903090600401612e2e565b60206040518083038186803b15801561182c57600080fd5b505afa158015611840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118649190612cd2565b111561197b576040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a08231906118a0903090600401612e2e565b60206040518083038186803b1580156118b857600080fd5b505afa1580156118cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f09190612cd2565b6040518363ffffffff1660e01b815260040161190d929190612e66565b602060405180830381600087803b15801561192757600080fd5b505af115801561193b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195f91906127ce565b61197b5760405162461bcd60e51b815260040161066c90613082565b5060010161119b565b6000611993606085018561311b565b90506119a2604086018661311b565b9050146119c15760405162461bcd60e51b815260040161066c90613055565b6119ce608085018561311b565b90506119dd604086018661311b565b9050146119fc5760405162461bcd60e51b815260040161066c90613055565b60405163e2cce56560e01b81526001600160a01b0387169063e2cce56590611a2c90889088908790600401612e99565b602060405180830381600087803b158015611a4657600080fd5b505af1158015611a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7e9190612a31565b905060005b611a90604086018661311b565b9050811015611ba9576000611aa8604087018761311b565b83818110611ab257fe5b9050602002016020810190611ac7919061270e565b90506001600160a01b0381166323b872dd3330611ae760608b018b61311b565b87818110611af157fe5b905060200201356040518463ffffffff1660e01b8152600401611b1693929190612e42565b602060405180830381600087803b158015611b3057600080fd5b505af1158015611b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6891906127ce565b611b845760405162461bcd60e51b815260040161066c90613082565b611ba08184611b9660608a018a61311b565b8681811061173257fe5b50600101611a83565b506040805163c3391d2760e01b81526001600160a01b0383169163c3391d2791611be29187359160208901359189013590600401613105565b600060405180830381600087803b158015611bfc57600080fd5b505af1158015611c10573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038416925063a9059cbb9150611c43903390873590600401612e66565b602060405180830381600087803b158015611c5d57600080fd5b505af1158015611c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9591906127ce565b611cb15760405162461bcd60e51b815260040161066c90613082565b95945050505050565b6000888714611cdb5760405162461bcd60e51b815260040161066c90613055565b888514611cfa5760405162461bcd60e51b815260040161066c90613055565b8a6001600160a01b031663d556c5dc6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d3557600080fd5b505af1158015611d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6d9190612a31565b6040516334e1990760e01b81529091506001600160a01b038216906334e1990790611d9c9087906004016130af565b600060405180830381600087803b158015611db657600080fd5b505af1158015611dca573d6000803e3d6000fd5b505060405163787dce3d60e01b81526001600160a01b038416925063787dce3d9150611dfa9086906004016130af565b600060405180830381600087803b158015611e1457600080fd5b505af1158015611e28573d6000803e3d6000fd5b5050505060005b89811015611fd05760008b8b83818110611e4557fe5b9050602002016020810190611e5a919061270e565b9050806001600160a01b03166323b872dd33308d8d87818110611e7957fe5b905060200201356040518463ffffffff1660e01b8152600401611e9e93929190612e42565b602060405180830381600087803b158015611eb857600080fd5b505af1158015611ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef091906127ce565b611f0c5760405162461bcd60e51b815260040161066c90613082565b611f1d81848c8c8681811061173257fe5b826001600160a01b031663e4e1e5388d8d85818110611f3857fe5b9050602002016020810190611f4d919061270e565b8c8c86818110611f5957fe5b905060200201358b8b87818110611f6c57fe5b905060200201356040518463ffffffff1660e01b8152600401611f9193929190612faa565b600060405180830381600087803b158015611fab57600080fd5b505af1158015611fbf573d6000803e3d6000fd5b505060019093019250611e2f915050565b50811561214057806001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561201257600080fd5b505af1158015612026573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038416925063a9059cbb9150339083906370a0823190612060903090600401612e2e565b60206040518083038186803b15801561207857600080fd5b505afa15801561208c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b09190612cd2565b6040518363ffffffff1660e01b81526004016120cd929190612e66565b602060405180830381600087803b1580156120e757600080fd5b505af11580156120fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211f91906127ce565b61213b5760405162461bcd60e51b815260040161066c90613082565b6121a0565b6040516324dacaa960e11b81526001600160a01b038216906349b595529061216d9060019060040161304a565b600060405180830381600087803b15801561218757600080fd5b505af115801561219b573d6000803e3d6000fd5b505050505b9a9950505050505050505050565b82518151146121cf5760405162461bcd60e51b815260040161066c90613055565b60005b83518110156122cb5760008482815181106121e957fe5b60200260200101519050806001600160a01b03166323b872dd333086868151811061221057fe5b60200260200101516040518463ffffffff1660e01b815260040161223693929190612e42565b602060405180830381600087803b15801561225057600080fd5b505af1158015612264573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228891906127ce565b6122a45760405162461bcd60e51b815260040161066c90613082565b6122c281878585815181106122b557fe5b6020026020010151612525565b506001016121d2565b506040516313da703560e21b81526001600160a01b03851690634f69c0d4906122fa90859085906004016130b8565b600060405180830381600087803b15801561231457600080fd5b505af1158015612328573d6000803e3d6000fd5b5050505060005b83518110156124ee57600084828151811061234657fe5b602002602001015190506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161237e9190612e2e565b60206040518083038186803b15801561239657600080fd5b505afa1580156123aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ce9190612cd2565b11156124e5576040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a082319061240a903090600401612e2e565b60206040518083038186803b15801561242257600080fd5b505afa158015612436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245a9190612cd2565b6040518363ffffffff1660e01b8152600401612477929190612e66565b602060405180830381600087803b15801561249157600080fd5b505af11580156124a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c991906127ce565b6124e55760405162461bcd60e51b815260040161066c90613082565b5060010161232f565b506040516370a0823160e01b81526001600160a01b0385169063a9059cbb90339083906370a08231906107d8903090600401612e2e565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906125569030908790600401612e7f565b60206040518083038186803b15801561256e57600080fd5b505afa158015612582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a69190612cd2565b111561262f5760405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906125db908590600090600401612e66565b602060405180830381600087803b1580156125f557600080fd5b505af1158015612609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061262d91906127ce565b505b60405163095ea7b360e01b81526001600160a01b0384169063095ea7b39061265d9085908590600401612e66565b602060405180830381600087803b15801561267757600080fd5b505af115801561268b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906127ce565b60008083601f8401126126c0578182fd5b5081356001600160401b038111156126d6578182fd5b60208301915083602080830285010111156126f057600080fd5b9250929050565b600060e08284031215612708578081fd5b50919050565b60006020828403121561271f578081fd5b813561272a8161323e565b9392505050565b60006020808385031215612743578182fd5b82516001600160401b03811115612758578283fd5b8301601f81018513612768578283fd5b805161277b61277682613187565b613161565b8181528381019083850185840285018601891015612797578687fd5b8694505b838510156127c25780516127ae8161323e565b83526001949094019391850191850161279b565b50979650505050505050565b6000602082840312156127df578081fd5b815161272a81613253565b600080604083850312156127fc578081fd5b82356128078161323e565b915060208301356128178161323e565b809150509250929050565b60008060408385031215612834578182fd5b823561283f8161323e565b91506020838101356001600160401b0381111561285a578283fd5b8401601f8101861361286a578283fd5b803561287861277682613187565b81815283810190838501858402850186018a1015612894578687fd5b8694505b838510156128b6578035835260019490940193918501918501612898565b5080955050505050509250929050565b600080604083850312156128d8578182fd5b82356128e38161323e565b9150602083013561281781613253565b60008060008060808587031215612908578182fd5b84356129138161323e565b935060208501356129238161323e565b93969395505050506040820135916060013590565b6000806040838503121561294a578182fd5b82356129558161323e565b946020939093013593505050565b60008060008060008060008060008060e08b8d031215612981578788fd5b8a3561298c8161323e565b995060208b01356001600160401b03808211156129a757898afd5b6129b38e838f016126af565b909b50995060408d01359150808211156129cb578788fd5b6129d78e838f016126af565b909950975060608d01359150808211156129ef578687fd5b506129fc8d828e016126af565b90965094505060808b0135925060a08b0135915060c08b0135612a1e81613253565b809150509295989b9194979a5092959850565b600060208284031215612a42578081fd5b815161272a8161323e565b60008060008060008060006080888a031215612a67578081fd5b8735612a728161323e565b965060208801356001600160401b0380821115612a8d578283fd5b612a998b838c016126af565b909850965060408a0135915080821115612ab1578283fd5b612abd8b838c016126af565b909650945060608a0135915080821115612ad5578283fd5b50612ae28a828b016126af565b989b979a50959850939692959293505050565b60008060008060608587031215612b0a578182fd5b8435612b158161323e565b93506020850135925060408501356001600160401b03811115612b36578283fd5b612b42878288016126af565b95989497509550505050565b60008060008060008587036101a0811215612b67578384fd5b8635612b728161323e565b95506020870135612b828161323e565b945060408701356001600160401b03811115612b9c578485fd5b612ba889828a016126f7565b9450506060605f1982011215612bbc578182fd5b50606086019150612bd08760c088016126f7565b90509295509295909350565b600080600060408486031215612bf0578081fd5b8335612bfb8161323e565b925060208401356001600160401b03811115612c15578182fd5b612c21868287016126af565b9497909650939450505050565b600080600080600060808688031215612c45578283fd5b8535612c508161323e565b945060208601356001600160401b03811115612c6a578384fd5b612c76888289016126af565b9699909850959660408101359660609091013595509350505050565b600080600060608486031215612ca6578081fd5b8335612cb18161323e565b92506020840135612cc18161323e565b929592945050506040919091013590565b600060208284031215612ce3578081fd5b5051919050565b60008284526020808501945082825b85811015612d27578135612d0c8161323e565b6001600160a01b031687529582019590820190600101612cf9565b509495945050505050565b81835260006001600160fb1b03831115612d4a578081fd5b6020830280836020870137939093016020019283525090919050565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b8035612da181613253565b151582526020810135612db381613253565b151560208301526040810135612dc881613253565b151560408301526060810135612ddd81613253565b151560608301526080810135612df281613253565b15156080830152612e0660a08201826131ed565b612e1360a0840182612d66565b50612e2160c08201826131ed565b610c5d60c0840182612d66565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b038416815261012060208201819052600090612ebc85806131fa565b60e083860152612ed161020086018284612d6c565b92505050612ee260208601866131fa565b61011f198086850301610140870152612efc848385612d6c565b9350612f0b60408901896131a6565b935091508086850301610160870152612f25848484612cea565b9350612f3460608901896131a6565b935091508086850301610180870152612f4e848484612d32565b9350612f5d60808901896131a6565b9350915080868503016101a087015250612f78838383612d32565b60a08801356101c087015260c08801356101e08701529350612fa292505060408401905084612d96565b949350505050565b6001600160a01b039390931683526020830191909152604082015260600190565b600060208252612fa2602083018486612cea565b6020808252825182820181905260009190848201906040850190845b8181101561301757835183529284019291840191600101612ffb565b50909695505050505050565b600060608252613037606083018688612d32565b6020830194909452506040015292915050565b901515815260200190565b60208082526013908201527208aa4a4be988a9c8ea890be9a92a69a82a8869606b1b604082015260600190565b60208082526013908201527211549497d514905394d1915497d19052531151606a1b604082015260600190565b90815260200190565b60006040820184835260206040818501528185518084526060860191508287019350845b818110156130f8578451835293830193918301916001016130dc565b5090979650505050505050565b9283526020830191909152604082015260600190565b6000808335601e19843603018112613131578283fd5b8301803591506001600160401b0382111561314a578283fd5b60209081019250810236038213156126f057600080fd5b6040518181016001600160401b038111828210171561317f57600080fd5b604052919050565b60006001600160401b0382111561319c578081fd5b5060209081020190565b6000808335601e198436030181126131bc578283fd5b83016020810192503590506001600160401b038111156131db57600080fd5b6020810236038313156126f057600080fd5b6000823561272a81613253565b6000808335601e19843603018112613210578283fd5b83016020810192503590506001600160401b0381111561322f57600080fd5b8036038313156126f057600080fd5b6001600160a01b038116811461067557600080fd5b801515811461067557600080fdfea26469706673582212209bf1f5e6a763b4570191a41131a500715feb793522b65c753e782acb7d84657764736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80638a5c57df116100c3578063c037f39c1161007c578063c037f39c14610297578063c1762b15146102aa578063da5a7feb146102bd578063e0d945bf146102d0578063e71414b6146102e3578063ec401b1d1461030c5761014d565b80638a5c57df14610225578063991991c7146102385780639c11bd171461024b5780639fbbf3ba1461025e578063b5b3ca2c14610271578063bfb973ad146102845761014d565b8063531f8bb611610115578063531f8bb6146101b3578063674f8d8e146101c65780637b7d6c68146101d957806380ad2cf3146101ec57806381bd5cd7146101ff57806384f3859b146102125761014d565b8063145aa57e146101525780631eccc185146101675780632c91a5911461017a578063370fc1571461018d5780634ef39b75146101a0575b600080fd5b6101656101603660046127ea565b61031f565b005b6101656101753660046128c6565b610381565b610165610188366004612af5565b6103ad565b61016561019b3660046128c6565b6104dc565b6101656101ae36600461270e565b610508565b6101656101c1366004612822565b610678565b6101656101d43660046128f3565b6106a4565b6101656101e73660046127ea565b6108b9565b6101656101fa366004612938565b6108e5565b61016561020d3660046128f3565b610911565b610165610220366004612c92565b610a50565b610165610233366004612af5565b610c62565b610165610246366004612938565b610c9d565b610165610259366004612c2e565b610cc9565b61016561026c3660046128f3565b610d34565b61016561027f366004612938565b610d9c565b610165610292366004612bdc565b610dc8565b6101656102a5366004612c92565b610e2d565b6101656102b83660046128f3565b610f5f565b6101656102cb366004612bdc565b61112c565b6101656102de366004612a4d565b61115a565b6102f66102f1366004612b4e565b611984565b6040516103039190612e2e565b60405180910390f35b6102f661031a366004612963565b611cba565b60405163e8d56b8b60e01b81526001600160a01b0383169063e8d56b8b9061034b908490600401612e2e565b600060405180830381600087803b15801561036557600080fd5b505af1158015610379573d6000803e3d6000fd5b505050505050565b6040516324dacaa960e11b81526001600160a01b038316906349b595529061034b90849060040161304a565b6060846001600160a01b031663b64ef17b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190612a31565b6001600160a01b031663cc77828d6040518163ffffffff1660e01b815260040160006040518083038186803b15801561045857600080fd5b505afa15801561046c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104949190810190612731565b90506104d58582868686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506121ae92505050565b5050505050565b60405163c2a14eb560e01b81526001600160a01b0383169063c2a14eb59061034b90849060040161304a565b806001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038416925063a9059cbb9150339083906370a0823190610591903090600401612e2e565b60206040518083038186803b1580156105a957600080fd5b505afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190612cd2565b6040518363ffffffff1660e01b81526004016105fe929190612e66565b602060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906127ce565b6106755760405162461bcd60e51b815260040161066c90613082565b60405180910390fd5b50565b60405163348d48e160e11b81526001600160a01b0383169063691a91c29061034b908490600401612fdf565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906106d490339030908690600401612e42565b602060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906127ce565b6107425760405162461bcd60e51b815260040161066c90613082565b604051639776e94b60e01b81526001600160a01b03851690639776e94b906107709086908690600401612e66565b600060405180830381600087803b15801561078a57600080fd5b505af115801561079e573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038616925063a9059cbb9150339083906370a08231906107d8903090600401612e2e565b60206040518083038186803b1580156107f057600080fd5b505afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108289190612cd2565b6040518363ffffffff1660e01b8152600401610845929190612e66565b602060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089791906127ce565b6108b35760405162461bcd60e51b815260040161066c90613082565b50505050565b6040516392eefe9b60e01b81526001600160a01b038316906392eefe9b9061034b908490600401612e2e565b6040516347786d3760e01b81526001600160a01b038316906347786d379061034b9084906004016130af565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061094190339030908690600401612e42565b602060405180830381600087803b15801561095b57600080fd5b505af115801561096f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099391906127ce565b6109af5760405162461bcd60e51b815260040161066c90613082565b6109ba838583612525565b604051639776e94b60e01b81526001600160a01b03851690639776e94b906109e89086908690600401612e66565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038716925063a9059cbb9150339083906370a08231906107d8903090600401612e2e565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610a8090339030908690600401612e42565b602060405180830381600087803b158015610a9a57600080fd5b505af1158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad291906127ce565b610aee5760405162461bcd60e51b815260040161066c90613082565b6040516317e9ed6160e21b81526001600160a01b03841690635fa7b58490610b1a908590600401612e2e565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038516925063a9059cbb9150339083906370a0823190610b82903090600401612e2e565b60206040518083038186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190612cd2565b6040518363ffffffff1660e01b8152600401610bef929190612e66565b602060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4191906127ce565b610c5d5760405162461bcd60e51b815260040161066c90613082565b505050565b6060846001600160a01b031663be3bbd2e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561045857600080fd5b6040516334e1990760e01b81526001600160a01b038316906334e199079061034b9084906004016130af565b60405163246bc19b60e01b81526001600160a01b0386169063246bc19b90610cfb908790879087908790600401613023565b600060405180830381600087803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050505050505050565b604051634c20d20960e01b81526001600160a01b03851690634c20d20990610d6490869086908690600401612faa565b600060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b5050505050505050565b60405163787dce3d60e01b81526001600160a01b0383169063787dce3d9061034b9084906004016130af565b604051636647666160e01b81526001600160a01b03841690636647666190610df69085908590600401612fcb565b600060405180830381600087803b158015610e1057600080fd5b505af1158015610e24573d6000803e3d6000fd5b50505050505050565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd90610e5d90339030908690600401612e42565b602060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaf91906127ce565b610ecb5760405162461bcd60e51b815260040161066c90613082565b610ed6828483612525565b826001600160a01b031663c275d81b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f1157600080fd5b505af1158015610f25573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038616925063a9059cbb9150339083906370a0823190610b82903090600401612e2e565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610f8f90339030908790600401612e42565b602060405180830381600087803b158015610fa957600080fd5b505af1158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe191906127ce565b610ffd5760405162461bcd60e51b815260040161066c90613082565b611008838584612525565b604051635db3427760e01b81526000906001600160a01b03861690635db342779061103b90879087908790600401612faa565b602060405180830381600087803b15801561105557600080fd5b505af1158015611069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108d9190612cd2565b60405163a9059cbb60e01b81529091506001600160a01b0386169063a9059cbb906110be9033908590600401612e66565b602060405180830381600087803b1580156110d857600080fd5b505af11580156110ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111091906127ce565b6104d55760405162461bcd60e51b815260040161066c90613082565b604051638cc3780160e01b81526001600160a01b03841690638cc3780190610df69085908590600401612fcb565b8483146111795760405162461bcd60e51b815260040161066c90613055565b8481146111985760405162461bcd60e51b815260040161066c90613055565b60005b85811015610d925760008787838181106111b157fe5b90506020020160208101906111c6919061270e565b9050886001600160a01b0316632f37b6248989858181106111e357fe5b90506020020160208101906111f8919061270e565b6040518263ffffffff1660e01b81526004016112149190612e2e565b60206040518083038186803b15801561122c57600080fd5b505afa158015611240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126491906127ce565b1561167157886001600160a01b031663f8b2cb4f89898581811061128457fe5b9050602002016020810190611299919061270e565b6040518263ffffffff1660e01b81526004016112b59190612e2e565b60206040518083038186803b1580156112cd57600080fd5b505afa1580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190612cd2565b86868481811061131157fe5b90506020020135111561152557806001600160a01b03166323b872dd33308c6001600160a01b031663f8b2cb4f8d8d8981811061134a57fe5b905060200201602081019061135f919061270e565b6040518263ffffffff1660e01b815260040161137b9190612e2e565b60206040518083038186803b15801561139357600080fd5b505afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb9190612cd2565b8a8a888181106113d757fe5b90506020020135036040518463ffffffff1660e01b81526004016113fd93929190612e42565b602060405180830381600087803b15801561141757600080fd5b505af115801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f91906127ce565b61146b5760405162461bcd60e51b815260040161066c90613082565b611525818a8b6001600160a01b031663f8b2cb4f8c8c8881811061148b57fe5b90506020020160208101906114a0919061270e565b6040518263ffffffff1660e01b81526004016114bc9190612e2e565b60206040518083038186803b1580156114d457600080fd5b505afa1580156114e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150c9190612cd2565b89898781811061151857fe5b9050602002013503612525565b620f424086868481811061153557fe5b9050602002013511156115ed57886001600160a01b0316633fdddaa289898581811061155d57fe5b9050602002016020810190611572919061270e565b88888681811061157e57fe5b9050602002013587878781811061159157fe5b905060200201356040518463ffffffff1660e01b81526004016115b693929190612faa565b600060405180830381600087803b1580156115d057600080fd5b505af11580156115e4573d6000803e3d6000fd5b5050505061166c565b886001600160a01b031663cf5e7bd389898581811061160857fe5b905060200201602081019061161d919061270e565b6040518263ffffffff1660e01b81526004016116399190612e2e565b600060405180830381600087803b15801561165357600080fd5b505af1158015611667573d6000803e3d6000fd5b505050505b6117e5565b806001600160a01b03166323b872dd333089898781811061168e57fe5b905060200201356040518463ffffffff1660e01b81526004016116b393929190612e42565b602060405180830381600087803b1580156116cd57600080fd5b505af11580156116e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170591906127ce565b6117215760405162461bcd60e51b815260040161066c90613082565b61173e818a88888681811061173257fe5b90506020020135612525565b886001600160a01b031663e4e1e53889898581811061175957fe5b905060200201602081019061176e919061270e565b88888681811061177a57fe5b9050602002013587878781811061178d57fe5b905060200201356040518463ffffffff1660e01b81526004016117b293929190612faa565b600060405180830381600087803b1580156117cc57600080fd5b505af11580156117e0573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611814903090600401612e2e565b60206040518083038186803b15801561182c57600080fd5b505afa158015611840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118649190612cd2565b111561197b576040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a08231906118a0903090600401612e2e565b60206040518083038186803b1580156118b857600080fd5b505afa1580156118cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f09190612cd2565b6040518363ffffffff1660e01b815260040161190d929190612e66565b602060405180830381600087803b15801561192757600080fd5b505af115801561193b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195f91906127ce565b61197b5760405162461bcd60e51b815260040161066c90613082565b5060010161119b565b6000611993606085018561311b565b90506119a2604086018661311b565b9050146119c15760405162461bcd60e51b815260040161066c90613055565b6119ce608085018561311b565b90506119dd604086018661311b565b9050146119fc5760405162461bcd60e51b815260040161066c90613055565b60405163e2cce56560e01b81526001600160a01b0387169063e2cce56590611a2c90889088908790600401612e99565b602060405180830381600087803b158015611a4657600080fd5b505af1158015611a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7e9190612a31565b905060005b611a90604086018661311b565b9050811015611ba9576000611aa8604087018761311b565b83818110611ab257fe5b9050602002016020810190611ac7919061270e565b90506001600160a01b0381166323b872dd3330611ae760608b018b61311b565b87818110611af157fe5b905060200201356040518463ffffffff1660e01b8152600401611b1693929190612e42565b602060405180830381600087803b158015611b3057600080fd5b505af1158015611b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6891906127ce565b611b845760405162461bcd60e51b815260040161066c90613082565b611ba08184611b9660608a018a61311b565b8681811061173257fe5b50600101611a83565b506040805163c3391d2760e01b81526001600160a01b0383169163c3391d2791611be29187359160208901359189013590600401613105565b600060405180830381600087803b158015611bfc57600080fd5b505af1158015611c10573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038416925063a9059cbb9150611c43903390873590600401612e66565b602060405180830381600087803b158015611c5d57600080fd5b505af1158015611c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9591906127ce565b611cb15760405162461bcd60e51b815260040161066c90613082565b95945050505050565b6000888714611cdb5760405162461bcd60e51b815260040161066c90613055565b888514611cfa5760405162461bcd60e51b815260040161066c90613055565b8a6001600160a01b031663d556c5dc6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d3557600080fd5b505af1158015611d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6d9190612a31565b6040516334e1990760e01b81529091506001600160a01b038216906334e1990790611d9c9087906004016130af565b600060405180830381600087803b158015611db657600080fd5b505af1158015611dca573d6000803e3d6000fd5b505060405163787dce3d60e01b81526001600160a01b038416925063787dce3d9150611dfa9086906004016130af565b600060405180830381600087803b158015611e1457600080fd5b505af1158015611e28573d6000803e3d6000fd5b5050505060005b89811015611fd05760008b8b83818110611e4557fe5b9050602002016020810190611e5a919061270e565b9050806001600160a01b03166323b872dd33308d8d87818110611e7957fe5b905060200201356040518463ffffffff1660e01b8152600401611e9e93929190612e42565b602060405180830381600087803b158015611eb857600080fd5b505af1158015611ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef091906127ce565b611f0c5760405162461bcd60e51b815260040161066c90613082565b611f1d81848c8c8681811061173257fe5b826001600160a01b031663e4e1e5388d8d85818110611f3857fe5b9050602002016020810190611f4d919061270e565b8c8c86818110611f5957fe5b905060200201358b8b87818110611f6c57fe5b905060200201356040518463ffffffff1660e01b8152600401611f9193929190612faa565b600060405180830381600087803b158015611fab57600080fd5b505af1158015611fbf573d6000803e3d6000fd5b505060019093019250611e2f915050565b50811561214057806001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561201257600080fd5b505af1158015612026573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038416925063a9059cbb9150339083906370a0823190612060903090600401612e2e565b60206040518083038186803b15801561207857600080fd5b505afa15801561208c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b09190612cd2565b6040518363ffffffff1660e01b81526004016120cd929190612e66565b602060405180830381600087803b1580156120e757600080fd5b505af11580156120fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211f91906127ce565b61213b5760405162461bcd60e51b815260040161066c90613082565b6121a0565b6040516324dacaa960e11b81526001600160a01b038216906349b595529061216d9060019060040161304a565b600060405180830381600087803b15801561218757600080fd5b505af115801561219b573d6000803e3d6000fd5b505050505b9a9950505050505050505050565b82518151146121cf5760405162461bcd60e51b815260040161066c90613055565b60005b83518110156122cb5760008482815181106121e957fe5b60200260200101519050806001600160a01b03166323b872dd333086868151811061221057fe5b60200260200101516040518463ffffffff1660e01b815260040161223693929190612e42565b602060405180830381600087803b15801561225057600080fd5b505af1158015612264573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228891906127ce565b6122a45760405162461bcd60e51b815260040161066c90613082565b6122c281878585815181106122b557fe5b6020026020010151612525565b506001016121d2565b506040516313da703560e21b81526001600160a01b03851690634f69c0d4906122fa90859085906004016130b8565b600060405180830381600087803b15801561231457600080fd5b505af1158015612328573d6000803e3d6000fd5b5050505060005b83518110156124ee57600084828151811061234657fe5b602002602001015190506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161237e9190612e2e565b60206040518083038186803b15801561239657600080fd5b505afa1580156123aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ce9190612cd2565b11156124e5576040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a082319061240a903090600401612e2e565b60206040518083038186803b15801561242257600080fd5b505afa158015612436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245a9190612cd2565b6040518363ffffffff1660e01b8152600401612477929190612e66565b602060405180830381600087803b15801561249157600080fd5b505af11580156124a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c991906127ce565b6124e55760405162461bcd60e51b815260040161066c90613082565b5060010161232f565b506040516370a0823160e01b81526001600160a01b0385169063a9059cbb90339083906370a08231906107d8903090600401612e2e565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906125569030908790600401612e7f565b60206040518083038186803b15801561256e57600080fd5b505afa158015612582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a69190612cd2565b111561262f5760405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906125db908590600090600401612e66565b602060405180830381600087803b1580156125f557600080fd5b505af1158015612609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061262d91906127ce565b505b60405163095ea7b360e01b81526001600160a01b0384169063095ea7b39061265d9085908590600401612e66565b602060405180830381600087803b15801561267757600080fd5b505af115801561268b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906127ce565b60008083601f8401126126c0578182fd5b5081356001600160401b038111156126d6578182fd5b60208301915083602080830285010111156126f057600080fd5b9250929050565b600060e08284031215612708578081fd5b50919050565b60006020828403121561271f578081fd5b813561272a8161323e565b9392505050565b60006020808385031215612743578182fd5b82516001600160401b03811115612758578283fd5b8301601f81018513612768578283fd5b805161277b61277682613187565b613161565b8181528381019083850185840285018601891015612797578687fd5b8694505b838510156127c25780516127ae8161323e565b83526001949094019391850191850161279b565b50979650505050505050565b6000602082840312156127df578081fd5b815161272a81613253565b600080604083850312156127fc578081fd5b82356128078161323e565b915060208301356128178161323e565b809150509250929050565b60008060408385031215612834578182fd5b823561283f8161323e565b91506020838101356001600160401b0381111561285a578283fd5b8401601f8101861361286a578283fd5b803561287861277682613187565b81815283810190838501858402850186018a1015612894578687fd5b8694505b838510156128b6578035835260019490940193918501918501612898565b5080955050505050509250929050565b600080604083850312156128d8578182fd5b82356128e38161323e565b9150602083013561281781613253565b60008060008060808587031215612908578182fd5b84356129138161323e565b935060208501356129238161323e565b93969395505050506040820135916060013590565b6000806040838503121561294a578182fd5b82356129558161323e565b946020939093013593505050565b60008060008060008060008060008060e08b8d031215612981578788fd5b8a3561298c8161323e565b995060208b01356001600160401b03808211156129a757898afd5b6129b38e838f016126af565b909b50995060408d01359150808211156129cb578788fd5b6129d78e838f016126af565b909950975060608d01359150808211156129ef578687fd5b506129fc8d828e016126af565b90965094505060808b0135925060a08b0135915060c08b0135612a1e81613253565b809150509295989b9194979a5092959850565b600060208284031215612a42578081fd5b815161272a8161323e565b60008060008060008060006080888a031215612a67578081fd5b8735612a728161323e565b965060208801356001600160401b0380821115612a8d578283fd5b612a998b838c016126af565b909850965060408a0135915080821115612ab1578283fd5b612abd8b838c016126af565b909650945060608a0135915080821115612ad5578283fd5b50612ae28a828b016126af565b989b979a50959850939692959293505050565b60008060008060608587031215612b0a578182fd5b8435612b158161323e565b93506020850135925060408501356001600160401b03811115612b36578283fd5b612b42878288016126af565b95989497509550505050565b60008060008060008587036101a0811215612b67578384fd5b8635612b728161323e565b95506020870135612b828161323e565b945060408701356001600160401b03811115612b9c578485fd5b612ba889828a016126f7565b9450506060605f1982011215612bbc578182fd5b50606086019150612bd08760c088016126f7565b90509295509295909350565b600080600060408486031215612bf0578081fd5b8335612bfb8161323e565b925060208401356001600160401b03811115612c15578182fd5b612c21868287016126af565b9497909650939450505050565b600080600080600060808688031215612c45578283fd5b8535612c508161323e565b945060208601356001600160401b03811115612c6a578384fd5b612c76888289016126af565b9699909850959660408101359660609091013595509350505050565b600080600060608486031215612ca6578081fd5b8335612cb18161323e565b92506020840135612cc18161323e565b929592945050506040919091013590565b600060208284031215612ce3578081fd5b5051919050565b60008284526020808501945082825b85811015612d27578135612d0c8161323e565b6001600160a01b031687529582019590820190600101612cf9565b509495945050505050565b81835260006001600160fb1b03831115612d4a578081fd5b6020830280836020870137939093016020019283525090919050565b15159052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b8035612da181613253565b151582526020810135612db381613253565b151560208301526040810135612dc881613253565b151560408301526060810135612ddd81613253565b151560608301526080810135612df281613253565b15156080830152612e0660a08201826131ed565b612e1360a0840182612d66565b50612e2160c08201826131ed565b610c5d60c0840182612d66565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b038416815261012060208201819052600090612ebc85806131fa565b60e083860152612ed161020086018284612d6c565b92505050612ee260208601866131fa565b61011f198086850301610140870152612efc848385612d6c565b9350612f0b60408901896131a6565b935091508086850301610160870152612f25848484612cea565b9350612f3460608901896131a6565b935091508086850301610180870152612f4e848484612d32565b9350612f5d60808901896131a6565b9350915080868503016101a087015250612f78838383612d32565b60a08801356101c087015260c08801356101e08701529350612fa292505060408401905084612d96565b949350505050565b6001600160a01b039390931683526020830191909152604082015260600190565b600060208252612fa2602083018486612cea565b6020808252825182820181905260009190848201906040850190845b8181101561301757835183529284019291840191600101612ffb565b50909695505050505050565b600060608252613037606083018688612d32565b6020830194909452506040015292915050565b901515815260200190565b60208082526013908201527208aa4a4be988a9c8ea890be9a92a69a82a8869606b1b604082015260600190565b60208082526013908201527211549497d514905394d1915497d19052531151606a1b604082015260600190565b90815260200190565b60006040820184835260206040818501528185518084526060860191508287019350845b818110156130f8578451835293830193918301916001016130dc565b5090979650505050505050565b9283526020830191909152604082015260600190565b6000808335601e19843603018112613131578283fd5b8301803591506001600160401b0382111561314a578283fd5b60209081019250810236038213156126f057600080fd5b6040518181016001600160401b038111828210171561317f57600080fd5b604052919050565b60006001600160401b0382111561319c578081fd5b5060209081020190565b6000808335601e198436030181126131bc578283fd5b83016020810192503590506001600160401b038111156131db57600080fd5b6020810236038313156126f057600080fd5b6000823561272a81613253565b6000808335601e19843603018112613210578283fd5b83016020810192503590506001600160401b0381111561322f57600080fd5b8036038313156126f057600080fd5b6001600160a01b038116811461067557600080fd5b801515811461067557600080fdfea26469706673582212209bf1f5e6a763b4570191a41131a500715feb793522b65c753e782acb7d84657764736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}